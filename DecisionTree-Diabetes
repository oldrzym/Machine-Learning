from sklearn.tree import DecisionTreeClassifier
from sklearn.tree import export_graphviz
import graphviz
import pandas as pd 
import os
from sklearn.model_selection import train_test_split
from sklearn.metrics import f1_score

#чтение датасета
df = pd.read_csv('diabetes.csv')
y = df1.pop('Outcome').tolist()
X = df1.values

#обучение модели на тестовой выборке
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)
clf = DecisionTreeClassifier(criterion='entropy', max_leaf_nodes = 25, min_samples_leaf = 15, random_state = 2020)
clf.fit(X_train, y_train)

#глубина дерева
clf.get_depth()

#прорисовка дерева
columns = list(df1.columns)
export_graphviz(clf, out_file='tree.dot', 
                feature_names=columns,
                class_names=['0', '1'],
                rounded = True, proportion = False, 
                precision = 2, filled = True, label='all')

with open('tree.dot') as f:
    dot_graph = f.read()
graphviz.Source(dot_graph)

#score
clf.score(X_train, y_train)

#f1 score
y_pred = [clf.predict(i.reshape(1, -1)) for i in X_train]
y_pred = [i[0] for i in y_pred]
f1_score(y_train, y_pred)

#предсказание для некоторых строк
df.pop('Outcome')
clf.predict(df.iloc[749].to_numpy().reshape(1, -1))
clf.predict(df.iloc[715].to_numpy().reshape(1, -1))
clf.predict(df.iloc[718].to_numpy().reshape(1, -1))
clf.predict(df.iloc[735].to_numpy().reshape(1, -1))
